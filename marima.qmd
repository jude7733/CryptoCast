---
title: "marima"
format: html
---

# Marima forcasting

## Load data
```{r}
xtrain_list <- readRDS("data/xtrain_list.rds")
xtest_list <- readRDS("data/xtest_list.rds")
ytrain_list <- readRDS("data/ytrain_list.rds")
ytest_list <- readRDS("data/ytest_list.rds")
crypto_data_list <- readRDS("data/crypto_data.rds")
```


## Install Marima
```{r}
#install.packages("marima", dependencies = TRUE)
library(marima)
library(dplyr)
```


## Data dim
```{r}
dim(xtrain_list$BTC)
dim(xtest_list$BTC)
```


## Sample data
```{r}
head(xtrain_list$BTC)
```


## Training function
```{r}
train_marima_model <- function(coin_name, xtrain_list, ytrain_list) {
  xtrain <- xtrain_list[[coin_name]]
  ytrain <- ytrain_list[[coin_name]]
  
  train_data <- bind_cols(xtrain, ytrain)
  
  model_structure <- define.model(kvar = ncol(train_data),
                                  ar = c(1, 2),
                                  ma = c(1),
                                  reg.var = c(1:8))
  
  marima_model <- marima(train_data,
                         ar.pattern = model_structure$ar.pattern,
                         ma.pattern = model_structure$ma.pattern
  )
  
  return(marima_model)
}
```


## BTC model
```{r}
btc_model <- train_marima_model("BTC", xtrain_list, ytrain_list)
summary(btc_model)
```


## Predict
```{r}
library(marima)

predict_with_marima <- function(coin_symbol, marima_model, xtrain_list, ytrain_list, xtest_list, ytest_list) {
  xtrain <- xtrain_list[[coin_symbol]]
  xtest <- xtest_list[[coin_symbol]]
  ytrain <- ytrain_list[[coin_symbol]]
  ytest <- ytest_list[[coin_symbol]]
  
  # Combine training data with known predictor variables for the forecast horizon
  full_series <- rbind(
    as.matrix(cbind(xtrain, close = ytrain)),
    as.matrix(cbind(xtest, close = rep(NA, nrow(xtest))))
  )
  
  nstart <- nrow(xtrain)
  nstep <- nrow(xtest)
  
  forecast_result <- arma.forecast(series = full_series,
                                   marima = marima_model,
                                   nstart = nstart,
                                   nstep = nstep)
  
  print(dim(forecast_result$forecasts))
  
  forecasted_prices <- forecast_result$forecasts[9, (nstart+1):(nstart+nstep)]
  
  return(forecasted_prices)
}
```


## Predict for Bitcoin
```{r}
btc_marima_forecast <- predict_with_marima("BTC", 
                                           btc_model,
                                           xtrain_list,
                                           ytrain_list,
                                           xtest_list,
                                           ytest_list)

#head(btc_marima_forecast)
```


## Values
```{r}
head(actual_prices)
head(btc_marima_forecast)
```


## Evaluation function RMSE
```{r}
calculate_rmse <- function(actual_values, predicted_values) {
  mse <- mean((actual_values - predicted_values)^2)
  rmse <- sqrt(mse)
  
  return(rmse)
}
```


## Evaluation
```{r}
actual_values <- ytest_list$BTC$close
marima_rmse <- calculate_rmse(actual_values, btc_marima_forecast)
cat(sprintf("Root Mean Squared Error on Test Data: $%.2f\n", marima_rmse))
```


## Plot
```{r}
plot(actual_prices, type = "l", col = "blue", 
     main = "MARIMA Price Forecast with CI",
     ylab = "Price", xlab = "Time")
lines(btc_marima_forecast, col = "red")
legend("topright", legend = c("Actual","Forecast"),
       col = c("blue","red"), lty = c(1,1))
```
